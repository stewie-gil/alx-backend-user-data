#!/usr/bin/env python3
11
rgb: 2222/2222/4444""" The filtered_logger module"""


import re
import logging


def filter_datum(fields, redaction, message, separator):
    """ returns obfsucated PII in  message"""
    pattern = r'({})=([^;]+)'.format('|'.join(fields))
    replacement = r'\1={}'.format(redaction)
    return re.sub(pattern, replacement, message)


def get_logger():
    """creates a logger object"""
    logger = logging.get_logger("user_data")
    logger.setLevel(logging.INFO)
    stream_handler = logging.StreamHandler()
    logger.addHandler(stream_handler)

    formatter = logging.Formatter(
        '%(asctime)s %(name)s %(levelname)s: %(message)s')
    stream_handler.setFormatter(Formatter)

    return logger


PII_FIELDS = ("ssn", "credit_card", "email", "address", "phone_number")


class RedactingFormatter(logging.Formatter):
    """ Redacting Formatter class
        """

    REDACTION = "***"
    FORMAT = "[HOLBERTON] %(name)s %(levelname)s %(asctime)-15s: %(message)s"
    SEPARATOR = ";"

    def __init__(self, fields):
        """ the init method"""
        super(RedactingFormatter, self).__init__(self.FORMAT)
        self.fields = fields

    def format(self, record: logging.LogRecord) -> str:
        """filters incoming log records"""
        message = super().format(record)

        return filter_datum(
            self.fields, self.REDACTION, message, self.SEPARATOR)
